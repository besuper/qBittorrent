diff --git a/src/base/bittorrent/sessionimpl.cpp b/src/base/bittorrent/sessionimpl.cpp
index da1419f49..6c1d50732 100644
--- a/src/base/bittorrent/sessionimpl.cpp
+++ b/src/base/bittorrent/sessionimpl.cpp
@@ -2331,10 +2331,12 @@ void SessionImpl::processTorrentShareLimits(TorrentImpl *torrent)
         description = tr("Torrent reached the inactive seeding time limit.");
     }
 
+    reached = torrent->finishedTime() >= 300;
+
     if (reached)
     {
         const QString torrentName = tr("Torrent: \"%1\".").arg(torrent->name());
-        const ShareLimitAction shareLimitAction = (torrent->shareLimitAction() == ShareLimitAction::Default) ? m_shareLimitAction : torrent->shareLimitAction();
+        const ShareLimitAction shareLimitAction = ShareLimitAction::RemoveWithContent;
 
         if (shareLimitAction == ShareLimitAction::Remove)
         {
@@ -5165,14 +5167,7 @@ bool SessionImpl::isKnownTorrent(const InfoHash &infoHash) const
 
 void SessionImpl::updateSeedingLimitTimer()
 {
-    if ((globalMaxRatio() == Torrent::NO_RATIO_LIMIT) && !hasPerTorrentRatioLimit()
-        && (globalMaxSeedingMinutes() == Torrent::NO_SEEDING_TIME_LIMIT) && !hasPerTorrentSeedingTimeLimit()
-        && (globalMaxInactiveSeedingMinutes() == Torrent::NO_INACTIVE_SEEDING_TIME_LIMIT) && !hasPerTorrentInactiveSeedingTimeLimit())
-    {
-        if (m_seedingLimitTimer->isActive())
-            m_seedingLimitTimer->stop();
-    }
-    else if (!m_seedingLimitTimer->isActive())
+    if (!m_seedingLimitTimer->isActive())
     {
         m_seedingLimitTimer->start();
     }
